#summary Sample block for the energy minimization algorithm in qmcpack.

= Optimization =

This is a slight variant on the Energy Minimization method of Umrigar et al. It uses a generalized eigenvalue solver on a linearized wavefunction (Psi trial and its derivatives with respect to its parameters) to find the lowest eigenvalue in the space spanned by the wavefunction w.r.t. its parameterization. Once the eigenvalue problem (which only includes the energy terms) is solved, a line minimization is performed along the direction of the optimal parameter changes using both the gradient and value of the cost function (which may include energy and variance) to find the minimum and update the parameters. This line minimization is necessary if using non linear parameters. An additional step is attempted in the direction of the second lowest eigenvalue. This is similar to a CG routine.

{{{
<qmc method="linear" move="pbyp" checkpoint="100" gpu="no">
<estimator name="LocalEnergy" hdf5="no"/>
<parameter name="useDrift">yes</parameter>
<parameter name="warmupSteps">10</parameter>
<parameter name="blocks">10</parameter>
<parameter name="stepsbetweensamples">3</parameter>
<parameter name="timestep">2.5</parameter>
<parameter name="samples">800</parameter>
<cost name="energy"> 0.95 </cost>
<cost name="variance"> 0.00 </cost>
<cost name="reweightedvariance"> 0.05 </cost>
<parameter name="max_its">2</parameter>
<parameter name="exp0"> -8 </parameter>
}}}

==Optimization algorithm==
 * samples = number of samples to optimize on.
 * max_its = maximum number of repeat optimization without generating new samples. 1-5 is regular range here.

===Advanced Opt. options===
These are options you probably want to leave alone.
 * exp0 = 10^exp0 is added to the diagonal for added stability in the algorithm.
 * maxWeight = maximum weight a walker can have. 
 * alloweddifference = allowed difference in cost function while doing the line minimization.

==Cost function==
 * energy
 * variance = unreweighted variance
 * reweighted variance
As mentioned before, the eigenvalue problem does not find eigenvalues of this cost function. This cost function is used to evaluate the optimal change in parameters after a direction is determined through the eigenvalue problem. By mixing in some variance you can get a more efficient wave function for DMC and can reduce some problems you might observe when using too few samples.