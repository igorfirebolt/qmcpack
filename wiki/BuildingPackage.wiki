#summary Instructions on how to build the package
#labels Phase-Deploy
#sidebar TableOfContents

= Getting and building QMCPACK =

Subversion checkout with
{{{
svn checkout http://qmcpack.googlecode.com/svn/trunk/ qmcpack
}}}
command will create a directory `qmcpack` (`topdir`) which contains
{{{
 - qmcpack
   - CMakeLists.txt 
   - src  
     - CMakeLists.txt 
	 - dir1
	   - CMakeLists.txt
	 - dir2
	   - CMakeLists.txt
	 ....
   - CMake 
   - config 
   - docs 
   - utils
   - build 
}}}

 * `src` : directory for the source
 * `CMake` : directory with cmake files for external package and compiler
 * `config` : directory with toolchain files for tested systems
 * `docs` : directory with doxygen files
 * `utils` : directory with utility scripts
 * `build` : empty directory for a build

== Prerequisites ==
 * C/C++ compilers
 * cmake, build utility, http://www.cmake.org
 * blas/lapack, numerical library, use platform-optimized libraries
 * libxml2, XML parser, http://xmlsoft.org/
 * hdf5, portable I/O library, http://www.hdfgroup.org/HDF5/
 * boost, peer-reviewed portable C++ source libraries, http://www.boost.org

Optional but required for a complete build
 * einspline, 3D bspline library, http://einspline.sourceforge.net/
 * fftw, FFT library, http://www.fftw.org/

== Build QMCPACK with cmake ==
Once the code is downloaded to `qmcpack` directory, 
{{{
cd qmcpack/build
cmake ..
make
}}}

If everything goes well, then you should see *`qmcpack/build/bin/qmcapp`*. 

Theoretically speaking, QMCPACK can be used on any UNIX/LINUX machine with
recent GNU C/C++ compilers. But, new users are likely to encounter many problems.
Follow the instuctions in [CMakeExplained].

= External libraries =

In order to install QMCPACK, users have to install several required packages.
These packages are included in standard Linux/cygwin distributions or can be
downloaded by following the links. If these libraries are installed in standard
directories, /usr /usr/local and /sw (Mac), no action is necessary.
Alternatively, environment variables XYZ_HOME should be set. Here, XYZ stands
for the name of package; the build utility can locate the libraries and use
them.

With few exceptions, the build utility cmake will look for XYZ_HOME/include for
the header files and XYZ_HOME/lib for the library files. When multiple
environment variables apply to a library, e.g., blas/lapack, the library is
searched according to the listed order.

||Name	||Category	||Environment variables 	||Comments||
||cmake	||utility|| || source and binary distribution on multiple platforms||
||blas/lapack	||Numerical library||MKL_HOME, LAPACK, ATLAS||Alternatives: vendor-provided blas, e.g., ESSL||
||hdf5 	||I/O	||HDF5_HOME, HDF_HOME	||source and binary distribution on multiple platforms ||
||libxml2	||I/O	||LIBXML2_HOME	||Standard library for Linux distributions||
||boost 	||C++ standard libraries|| BOOST_HOME	||Using only the header files. No need to compile anything. Simply download and unpack the package.||
||einspline||c library for 3D bspline||EINSPLINE_HOME||see [HowToEinsplineLib Using Einspline library]||
||fftw||c library for FFT||FFTW_HOME||http://www.fftw.org/||

On many HPC centers, these packages are managed by utilities
like *module* and *softenv*. Consult the documentations on each
site.

Notes on Numerical Libraries: If lapack/blas or atlas is not in
your standard paths, do one of the followings. location is where
the libraries are located.

For bash users,
{{{
  export LAPACK="-L/location -llapack -lblas"
  export ATLAS="-L/location -llapack -lf77blas -lcblas -latlas" 
}}}
For tcsh users,
{{{
  setenv LAPACK "-L/location -llapack -lblas"
  setenv ATLAS "-L/location -llapack -lf77blas -lcblas -latlas"
}}}

= Utilities included in QMCPACK distribution =
These features are distributed with the source code but not enabled by default.
Modify `src/CMakeList.txt` to build them.
 * SQD: package to perform HF calculations in a spherical potential
  {{{
  SUBDIRS(SQD)
  }}}
 * Utilities to convert output files of the Gaussian-based code for QMCPACK in src/QMCTools
 {{{
 SET(BUILD_QMCTOOLS 1 CACHE BOOL "Build tools for QMCPACK")
 }}}

