# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AS = @AS@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
F90 = @F90@
F90_OPTIMIZE_FLAGS = @F90_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
HDF5_LIBS = @HDF5_LIBS@

INCLUDES = $(OOMPI_INC)
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MKL_LIBS = @MKL_LIBS@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPILIBS = @MPILIBS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
QMCBASE_LIBS = @QMCBASE_LIBS@
RANLIB = @RANLIB@
SPRNG_LIBS = @SPRNG_LIBS@
STRIP = @STRIP@
UP = @UP@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

#add mpi-related sources and oompi directory for --enable-mpi=yes
pkginclude_HEADERS = \
	ohmms-config.h 


QMCPP_UTILITIES = \
  Utilities/RandRandom.cpp  \
  Utilities/RandomGenerator.cpp  \
  Utilities/OhmmsObject.cpp  \
  Utilities/SpeciesSet.cpp  \
  Utilities/SimpleParser.cpp  \
  Utilities/OhmmsInform.cpp  \
  Utilities/OhmmsInfo.cpp  \
  OhmmsData/Libxml2Doc.cpp \
  OhmmsApp/ProjectData.cpp \
  OhmmsApp/RandomNumberControl.cpp\
  Numerics/OhmmsBlas.cpp \
  Platforms/sysutil.cpp \
  QMCFactory/OneDimGridFactory.cpp


QMCPP_MESSAGE = \
	Message/Communicate.cpp 


QMCPP_PARTICLE = \
  Lattice/Uniform3DGridLayout.cpp  \
  Particle/ParticleSet.cpp  \
  Particle/ParticleSet.BC.cpp  \
  Particle/MCWalkerConfiguration.cpp  \
  Particle/DistanceTable.cpp \
  Particle/HDFWalkerOutput.cpp \
  Particle/HDFWalkerInput0.cpp \
  Particle/HDFWalkerInputCollect.cpp \
  Particle/HDFWalkerInputManager.cpp \
  LongRange/KContainer.cpp \
  LongRange/StructFact.cpp \
  ParticleTags.cpp  \
  ParticleIO/ParticleLayoutIO.cpp  \
  ParticleIO/HDFParticleIO.cpp  \
  ParticleIO/XMLParticleIO.cpp  


QMC_BASE = \
	QMCHamiltonians/QMCHamiltonian.cpp\
	QMCWaveFunctions/JastrowBuilder.cpp\
	QMCWaveFunctions/TrialWaveFunction.cpp


@NEEDTOBUILDOOMPI_TRUE@oompi = OOMPI
@NEEDTOBUILDOOMPI_TRUE@OOMPI_INC = -I$(top_srcdir)/src/OOMPI

# build the base library used by any application
lib_LIBRARIES = libqmcbase.a

libqmcbase_a_SOURCES = \
	$(QMCPP_UTILITIES) \
	$(QMCPP_MESSAGE) \
	$(QMCPP_PARTICLE) \
	$(QMC_BASE)


#important: build order,
#  i) current directory for the base libraries
# ii) application-dependent libraries: FortranLib, OOMPI, SlaterKosterTB
#iii) the main application: OhmmsApp
# iv) ready to install the header files and libraries
SUBDIRS = $(oompi) . QMCApp
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = ohmms-config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libqmcbase_a_AR = $(AR) cru
libqmcbase_a_LIBADD =
am__objects_1 = RandRandom.$(OBJEXT) RandomGenerator.$(OBJEXT) \
	OhmmsObject.$(OBJEXT) SpeciesSet.$(OBJEXT) \
	SimpleParser.$(OBJEXT) OhmmsInform.$(OBJEXT) \
	OhmmsInfo.$(OBJEXT) Libxml2Doc.$(OBJEXT) ProjectData.$(OBJEXT) \
	RandomNumberControl.$(OBJEXT) OhmmsBlas.$(OBJEXT) \
	sysutil.$(OBJEXT) OneDimGridFactory.$(OBJEXT)
am__objects_2 = Communicate.$(OBJEXT)
am__objects_3 = Uniform3DGridLayout.$(OBJEXT) ParticleSet.$(OBJEXT) \
	ParticleSet.BC.$(OBJEXT) MCWalkerConfiguration.$(OBJEXT) \
	DistanceTable.$(OBJEXT) HDFWalkerOutput.$(OBJEXT) \
	HDFWalkerInput0.$(OBJEXT) HDFWalkerInputCollect.$(OBJEXT) \
	HDFWalkerInputManager.$(OBJEXT) KContainer.$(OBJEXT) \
	StructFact.$(OBJEXT) ParticleTags.$(OBJEXT) \
	ParticleLayoutIO.$(OBJEXT) HDFParticleIO.$(OBJEXT) \
	XMLParticleIO.$(OBJEXT)
am__objects_4 = QMCHamiltonian.$(OBJEXT) JastrowBuilder.$(OBJEXT) \
	TrialWaveFunction.$(OBJEXT)
am_libqmcbase_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
libqmcbase_a_OBJECTS = $(am_libqmcbase_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Communicate.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DistanceTable.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFParticleIO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerInput0.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerInputCollect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerInputManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerOutput.Po \
@AMDEP_TRUE@	./$(DEPDIR)/JastrowBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KContainer.Po ./$(DEPDIR)/Libxml2Doc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MCWalkerConfiguration.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OhmmsBlas.Po ./$(DEPDIR)/OhmmsInfo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OhmmsInform.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OhmmsObject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OneDimGridFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleLayoutIO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleSet.BC.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleTags.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ProjectData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QMCHamiltonian.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RandRandom.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RandomGenerator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RandomNumberControl.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleParser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SpeciesSet.Po ./$(DEPDIR)/StructFact.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TrialWaveFunction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Uniform3DGridLayout.Po \
@AMDEP_TRUE@	./$(DEPDIR)/XMLParticleIO.Po ./$(DEPDIR)/sysutil.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libqmcbase_a_SOURCES)
HEADERS = $(pkginclude_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(pkginclude_HEADERS) Makefile.am Makefile.in \
	ohmms-config.h.in
DIST_SUBDIRS = OOMPI . QMCApp
SOURCES = $(libqmcbase_a_SOURCES)

all: ohmms-config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

ohmms-config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/ohmms-config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/ohmms-config.h

$(srcdir)/ohmms-config.h.in:  $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/ohmms-config.h.in

distclean-hdr:
	-rm -f ohmms-config.h stamp-h1
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
RandRandom.$(OBJEXT): Utilities/RandRandom.cpp
RandomGenerator.$(OBJEXT): Utilities/RandomGenerator.cpp
OhmmsObject.$(OBJEXT): Utilities/OhmmsObject.cpp
SpeciesSet.$(OBJEXT): Utilities/SpeciesSet.cpp
SimpleParser.$(OBJEXT): Utilities/SimpleParser.cpp
OhmmsInform.$(OBJEXT): Utilities/OhmmsInform.cpp
OhmmsInfo.$(OBJEXT): Utilities/OhmmsInfo.cpp
Libxml2Doc.$(OBJEXT): OhmmsData/Libxml2Doc.cpp
ProjectData.$(OBJEXT): OhmmsApp/ProjectData.cpp
RandomNumberControl.$(OBJEXT): OhmmsApp/RandomNumberControl.cpp
OhmmsBlas.$(OBJEXT): Numerics/OhmmsBlas.cpp
sysutil.$(OBJEXT): Platforms/sysutil.cpp
OneDimGridFactory.$(OBJEXT): QMCFactory/OneDimGridFactory.cpp
Communicate.$(OBJEXT): Message/Communicate.cpp
Uniform3DGridLayout.$(OBJEXT): Lattice/Uniform3DGridLayout.cpp
ParticleSet.$(OBJEXT): Particle/ParticleSet.cpp
ParticleSet.BC.$(OBJEXT): Particle/ParticleSet.BC.cpp
MCWalkerConfiguration.$(OBJEXT): Particle/MCWalkerConfiguration.cpp
DistanceTable.$(OBJEXT): Particle/DistanceTable.cpp
HDFWalkerOutput.$(OBJEXT): Particle/HDFWalkerOutput.cpp
HDFWalkerInput0.$(OBJEXT): Particle/HDFWalkerInput0.cpp
HDFWalkerInputCollect.$(OBJEXT): Particle/HDFWalkerInputCollect.cpp
HDFWalkerInputManager.$(OBJEXT): Particle/HDFWalkerInputManager.cpp
KContainer.$(OBJEXT): LongRange/KContainer.cpp
StructFact.$(OBJEXT): LongRange/StructFact.cpp
ParticleLayoutIO.$(OBJEXT): ParticleIO/ParticleLayoutIO.cpp
HDFParticleIO.$(OBJEXT): ParticleIO/HDFParticleIO.cpp
XMLParticleIO.$(OBJEXT): ParticleIO/XMLParticleIO.cpp
QMCHamiltonian.$(OBJEXT): QMCHamiltonians/QMCHamiltonian.cpp
JastrowBuilder.$(OBJEXT): QMCWaveFunctions/JastrowBuilder.cpp
TrialWaveFunction.$(OBJEXT): QMCWaveFunctions/TrialWaveFunction.cpp
libqmcbase.a: $(libqmcbase_a_OBJECTS) $(libqmcbase_a_DEPENDENCIES) 
	-rm -f libqmcbase.a
	$(libqmcbase_a_AR) libqmcbase.a $(libqmcbase_a_OBJECTS) $(libqmcbase_a_LIBADD)
	$(RANLIB) libqmcbase.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Communicate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DistanceTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFParticleIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerInput0.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerInputCollect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerInputManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerOutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JastrowBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Libxml2Doc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MCWalkerConfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsBlas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsInform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OneDimGridFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleLayoutIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleSet.BC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleTags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProjectData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCHamiltonian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandRandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandomGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandomNumberControl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StructFact.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrialWaveFunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Uniform3DGridLayout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLParticleIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sysutil.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

RandRandom.o: Utilities/RandRandom.cpp
@AMDEP_TRUE@	source='Utilities/RandRandom.cpp' object='RandRandom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandRandom.Po' tmpdepfile='$(DEPDIR)/RandRandom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandRandom.o `test -f 'Utilities/RandRandom.cpp' || echo '$(srcdir)/'`Utilities/RandRandom.cpp

RandRandom.obj: Utilities/RandRandom.cpp
@AMDEP_TRUE@	source='Utilities/RandRandom.cpp' object='RandRandom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandRandom.Po' tmpdepfile='$(DEPDIR)/RandRandom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandRandom.obj `cygpath -w Utilities/RandRandom.cpp`

RandRandom.lo: Utilities/RandRandom.cpp
@AMDEP_TRUE@	source='Utilities/RandRandom.cpp' object='RandRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandRandom.Plo' tmpdepfile='$(DEPDIR)/RandRandom.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandRandom.lo `test -f 'Utilities/RandRandom.cpp' || echo '$(srcdir)/'`Utilities/RandRandom.cpp

RandomGenerator.o: Utilities/RandomGenerator.cpp
@AMDEP_TRUE@	source='Utilities/RandomGenerator.cpp' object='RandomGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomGenerator.Po' tmpdepfile='$(DEPDIR)/RandomGenerator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomGenerator.o `test -f 'Utilities/RandomGenerator.cpp' || echo '$(srcdir)/'`Utilities/RandomGenerator.cpp

RandomGenerator.obj: Utilities/RandomGenerator.cpp
@AMDEP_TRUE@	source='Utilities/RandomGenerator.cpp' object='RandomGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomGenerator.Po' tmpdepfile='$(DEPDIR)/RandomGenerator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomGenerator.obj `cygpath -w Utilities/RandomGenerator.cpp`

RandomGenerator.lo: Utilities/RandomGenerator.cpp
@AMDEP_TRUE@	source='Utilities/RandomGenerator.cpp' object='RandomGenerator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomGenerator.Plo' tmpdepfile='$(DEPDIR)/RandomGenerator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomGenerator.lo `test -f 'Utilities/RandomGenerator.cpp' || echo '$(srcdir)/'`Utilities/RandomGenerator.cpp

OhmmsObject.o: Utilities/OhmmsObject.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsObject.cpp' object='OhmmsObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsObject.Po' tmpdepfile='$(DEPDIR)/OhmmsObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsObject.o `test -f 'Utilities/OhmmsObject.cpp' || echo '$(srcdir)/'`Utilities/OhmmsObject.cpp

OhmmsObject.obj: Utilities/OhmmsObject.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsObject.cpp' object='OhmmsObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsObject.Po' tmpdepfile='$(DEPDIR)/OhmmsObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsObject.obj `cygpath -w Utilities/OhmmsObject.cpp`

OhmmsObject.lo: Utilities/OhmmsObject.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsObject.cpp' object='OhmmsObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsObject.Plo' tmpdepfile='$(DEPDIR)/OhmmsObject.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsObject.lo `test -f 'Utilities/OhmmsObject.cpp' || echo '$(srcdir)/'`Utilities/OhmmsObject.cpp

SpeciesSet.o: Utilities/SpeciesSet.cpp
@AMDEP_TRUE@	source='Utilities/SpeciesSet.cpp' object='SpeciesSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpeciesSet.Po' tmpdepfile='$(DEPDIR)/SpeciesSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpeciesSet.o `test -f 'Utilities/SpeciesSet.cpp' || echo '$(srcdir)/'`Utilities/SpeciesSet.cpp

SpeciesSet.obj: Utilities/SpeciesSet.cpp
@AMDEP_TRUE@	source='Utilities/SpeciesSet.cpp' object='SpeciesSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpeciesSet.Po' tmpdepfile='$(DEPDIR)/SpeciesSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpeciesSet.obj `cygpath -w Utilities/SpeciesSet.cpp`

SpeciesSet.lo: Utilities/SpeciesSet.cpp
@AMDEP_TRUE@	source='Utilities/SpeciesSet.cpp' object='SpeciesSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpeciesSet.Plo' tmpdepfile='$(DEPDIR)/SpeciesSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpeciesSet.lo `test -f 'Utilities/SpeciesSet.cpp' || echo '$(srcdir)/'`Utilities/SpeciesSet.cpp

SimpleParser.o: Utilities/SimpleParser.cpp
@AMDEP_TRUE@	source='Utilities/SimpleParser.cpp' object='SimpleParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleParser.Po' tmpdepfile='$(DEPDIR)/SimpleParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleParser.o `test -f 'Utilities/SimpleParser.cpp' || echo '$(srcdir)/'`Utilities/SimpleParser.cpp

SimpleParser.obj: Utilities/SimpleParser.cpp
@AMDEP_TRUE@	source='Utilities/SimpleParser.cpp' object='SimpleParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleParser.Po' tmpdepfile='$(DEPDIR)/SimpleParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleParser.obj `cygpath -w Utilities/SimpleParser.cpp`

SimpleParser.lo: Utilities/SimpleParser.cpp
@AMDEP_TRUE@	source='Utilities/SimpleParser.cpp' object='SimpleParser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleParser.Plo' tmpdepfile='$(DEPDIR)/SimpleParser.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleParser.lo `test -f 'Utilities/SimpleParser.cpp' || echo '$(srcdir)/'`Utilities/SimpleParser.cpp

OhmmsInform.o: Utilities/OhmmsInform.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInform.cpp' object='OhmmsInform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInform.Po' tmpdepfile='$(DEPDIR)/OhmmsInform.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInform.o `test -f 'Utilities/OhmmsInform.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInform.cpp

OhmmsInform.obj: Utilities/OhmmsInform.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInform.cpp' object='OhmmsInform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInform.Po' tmpdepfile='$(DEPDIR)/OhmmsInform.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInform.obj `cygpath -w Utilities/OhmmsInform.cpp`

OhmmsInform.lo: Utilities/OhmmsInform.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInform.cpp' object='OhmmsInform.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInform.Plo' tmpdepfile='$(DEPDIR)/OhmmsInform.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInform.lo `test -f 'Utilities/OhmmsInform.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInform.cpp

OhmmsInfo.o: Utilities/OhmmsInfo.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInfo.cpp' object='OhmmsInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInfo.Po' tmpdepfile='$(DEPDIR)/OhmmsInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInfo.o `test -f 'Utilities/OhmmsInfo.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInfo.cpp

OhmmsInfo.obj: Utilities/OhmmsInfo.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInfo.cpp' object='OhmmsInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInfo.Po' tmpdepfile='$(DEPDIR)/OhmmsInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInfo.obj `cygpath -w Utilities/OhmmsInfo.cpp`

OhmmsInfo.lo: Utilities/OhmmsInfo.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInfo.cpp' object='OhmmsInfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInfo.Plo' tmpdepfile='$(DEPDIR)/OhmmsInfo.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInfo.lo `test -f 'Utilities/OhmmsInfo.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInfo.cpp

Libxml2Doc.o: OhmmsData/Libxml2Doc.cpp
@AMDEP_TRUE@	source='OhmmsData/Libxml2Doc.cpp' object='Libxml2Doc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Libxml2Doc.Po' tmpdepfile='$(DEPDIR)/Libxml2Doc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Libxml2Doc.o `test -f 'OhmmsData/Libxml2Doc.cpp' || echo '$(srcdir)/'`OhmmsData/Libxml2Doc.cpp

Libxml2Doc.obj: OhmmsData/Libxml2Doc.cpp
@AMDEP_TRUE@	source='OhmmsData/Libxml2Doc.cpp' object='Libxml2Doc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Libxml2Doc.Po' tmpdepfile='$(DEPDIR)/Libxml2Doc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Libxml2Doc.obj `cygpath -w OhmmsData/Libxml2Doc.cpp`

Libxml2Doc.lo: OhmmsData/Libxml2Doc.cpp
@AMDEP_TRUE@	source='OhmmsData/Libxml2Doc.cpp' object='Libxml2Doc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Libxml2Doc.Plo' tmpdepfile='$(DEPDIR)/Libxml2Doc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Libxml2Doc.lo `test -f 'OhmmsData/Libxml2Doc.cpp' || echo '$(srcdir)/'`OhmmsData/Libxml2Doc.cpp

ProjectData.o: OhmmsApp/ProjectData.cpp
@AMDEP_TRUE@	source='OhmmsApp/ProjectData.cpp' object='ProjectData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ProjectData.Po' tmpdepfile='$(DEPDIR)/ProjectData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProjectData.o `test -f 'OhmmsApp/ProjectData.cpp' || echo '$(srcdir)/'`OhmmsApp/ProjectData.cpp

ProjectData.obj: OhmmsApp/ProjectData.cpp
@AMDEP_TRUE@	source='OhmmsApp/ProjectData.cpp' object='ProjectData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ProjectData.Po' tmpdepfile='$(DEPDIR)/ProjectData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProjectData.obj `cygpath -w OhmmsApp/ProjectData.cpp`

ProjectData.lo: OhmmsApp/ProjectData.cpp
@AMDEP_TRUE@	source='OhmmsApp/ProjectData.cpp' object='ProjectData.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ProjectData.Plo' tmpdepfile='$(DEPDIR)/ProjectData.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProjectData.lo `test -f 'OhmmsApp/ProjectData.cpp' || echo '$(srcdir)/'`OhmmsApp/ProjectData.cpp

RandomNumberControl.o: OhmmsApp/RandomNumberControl.cpp
@AMDEP_TRUE@	source='OhmmsApp/RandomNumberControl.cpp' object='RandomNumberControl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomNumberControl.Po' tmpdepfile='$(DEPDIR)/RandomNumberControl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomNumberControl.o `test -f 'OhmmsApp/RandomNumberControl.cpp' || echo '$(srcdir)/'`OhmmsApp/RandomNumberControl.cpp

RandomNumberControl.obj: OhmmsApp/RandomNumberControl.cpp
@AMDEP_TRUE@	source='OhmmsApp/RandomNumberControl.cpp' object='RandomNumberControl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomNumberControl.Po' tmpdepfile='$(DEPDIR)/RandomNumberControl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomNumberControl.obj `cygpath -w OhmmsApp/RandomNumberControl.cpp`

RandomNumberControl.lo: OhmmsApp/RandomNumberControl.cpp
@AMDEP_TRUE@	source='OhmmsApp/RandomNumberControl.cpp' object='RandomNumberControl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomNumberControl.Plo' tmpdepfile='$(DEPDIR)/RandomNumberControl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomNumberControl.lo `test -f 'OhmmsApp/RandomNumberControl.cpp' || echo '$(srcdir)/'`OhmmsApp/RandomNumberControl.cpp

OhmmsBlas.o: Numerics/OhmmsBlas.cpp
@AMDEP_TRUE@	source='Numerics/OhmmsBlas.cpp' object='OhmmsBlas.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsBlas.Po' tmpdepfile='$(DEPDIR)/OhmmsBlas.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsBlas.o `test -f 'Numerics/OhmmsBlas.cpp' || echo '$(srcdir)/'`Numerics/OhmmsBlas.cpp

OhmmsBlas.obj: Numerics/OhmmsBlas.cpp
@AMDEP_TRUE@	source='Numerics/OhmmsBlas.cpp' object='OhmmsBlas.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsBlas.Po' tmpdepfile='$(DEPDIR)/OhmmsBlas.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsBlas.obj `cygpath -w Numerics/OhmmsBlas.cpp`

OhmmsBlas.lo: Numerics/OhmmsBlas.cpp
@AMDEP_TRUE@	source='Numerics/OhmmsBlas.cpp' object='OhmmsBlas.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsBlas.Plo' tmpdepfile='$(DEPDIR)/OhmmsBlas.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsBlas.lo `test -f 'Numerics/OhmmsBlas.cpp' || echo '$(srcdir)/'`Numerics/OhmmsBlas.cpp

sysutil.o: Platforms/sysutil.cpp
@AMDEP_TRUE@	source='Platforms/sysutil.cpp' object='sysutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sysutil.Po' tmpdepfile='$(DEPDIR)/sysutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysutil.o `test -f 'Platforms/sysutil.cpp' || echo '$(srcdir)/'`Platforms/sysutil.cpp

sysutil.obj: Platforms/sysutil.cpp
@AMDEP_TRUE@	source='Platforms/sysutil.cpp' object='sysutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sysutil.Po' tmpdepfile='$(DEPDIR)/sysutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysutil.obj `cygpath -w Platforms/sysutil.cpp`

sysutil.lo: Platforms/sysutil.cpp
@AMDEP_TRUE@	source='Platforms/sysutil.cpp' object='sysutil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sysutil.Plo' tmpdepfile='$(DEPDIR)/sysutil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysutil.lo `test -f 'Platforms/sysutil.cpp' || echo '$(srcdir)/'`Platforms/sysutil.cpp

OneDimGridFactory.o: QMCFactory/OneDimGridFactory.cpp
@AMDEP_TRUE@	source='QMCFactory/OneDimGridFactory.cpp' object='OneDimGridFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OneDimGridFactory.Po' tmpdepfile='$(DEPDIR)/OneDimGridFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OneDimGridFactory.o `test -f 'QMCFactory/OneDimGridFactory.cpp' || echo '$(srcdir)/'`QMCFactory/OneDimGridFactory.cpp

OneDimGridFactory.obj: QMCFactory/OneDimGridFactory.cpp
@AMDEP_TRUE@	source='QMCFactory/OneDimGridFactory.cpp' object='OneDimGridFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OneDimGridFactory.Po' tmpdepfile='$(DEPDIR)/OneDimGridFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OneDimGridFactory.obj `cygpath -w QMCFactory/OneDimGridFactory.cpp`

OneDimGridFactory.lo: QMCFactory/OneDimGridFactory.cpp
@AMDEP_TRUE@	source='QMCFactory/OneDimGridFactory.cpp' object='OneDimGridFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OneDimGridFactory.Plo' tmpdepfile='$(DEPDIR)/OneDimGridFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OneDimGridFactory.lo `test -f 'QMCFactory/OneDimGridFactory.cpp' || echo '$(srcdir)/'`QMCFactory/OneDimGridFactory.cpp

Communicate.o: Message/Communicate.cpp
@AMDEP_TRUE@	source='Message/Communicate.cpp' object='Communicate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Communicate.Po' tmpdepfile='$(DEPDIR)/Communicate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Communicate.o `test -f 'Message/Communicate.cpp' || echo '$(srcdir)/'`Message/Communicate.cpp

Communicate.obj: Message/Communicate.cpp
@AMDEP_TRUE@	source='Message/Communicate.cpp' object='Communicate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Communicate.Po' tmpdepfile='$(DEPDIR)/Communicate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Communicate.obj `cygpath -w Message/Communicate.cpp`

Communicate.lo: Message/Communicate.cpp
@AMDEP_TRUE@	source='Message/Communicate.cpp' object='Communicate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Communicate.Plo' tmpdepfile='$(DEPDIR)/Communicate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Communicate.lo `test -f 'Message/Communicate.cpp' || echo '$(srcdir)/'`Message/Communicate.cpp

Uniform3DGridLayout.o: Lattice/Uniform3DGridLayout.cpp
@AMDEP_TRUE@	source='Lattice/Uniform3DGridLayout.cpp' object='Uniform3DGridLayout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Uniform3DGridLayout.Po' tmpdepfile='$(DEPDIR)/Uniform3DGridLayout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Uniform3DGridLayout.o `test -f 'Lattice/Uniform3DGridLayout.cpp' || echo '$(srcdir)/'`Lattice/Uniform3DGridLayout.cpp

Uniform3DGridLayout.obj: Lattice/Uniform3DGridLayout.cpp
@AMDEP_TRUE@	source='Lattice/Uniform3DGridLayout.cpp' object='Uniform3DGridLayout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Uniform3DGridLayout.Po' tmpdepfile='$(DEPDIR)/Uniform3DGridLayout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Uniform3DGridLayout.obj `cygpath -w Lattice/Uniform3DGridLayout.cpp`

Uniform3DGridLayout.lo: Lattice/Uniform3DGridLayout.cpp
@AMDEP_TRUE@	source='Lattice/Uniform3DGridLayout.cpp' object='Uniform3DGridLayout.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Uniform3DGridLayout.Plo' tmpdepfile='$(DEPDIR)/Uniform3DGridLayout.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Uniform3DGridLayout.lo `test -f 'Lattice/Uniform3DGridLayout.cpp' || echo '$(srcdir)/'`Lattice/Uniform3DGridLayout.cpp

ParticleSet.o: Particle/ParticleSet.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.cpp' object='ParticleSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.Po' tmpdepfile='$(DEPDIR)/ParticleSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.o `test -f 'Particle/ParticleSet.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.cpp

ParticleSet.obj: Particle/ParticleSet.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.cpp' object='ParticleSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.Po' tmpdepfile='$(DEPDIR)/ParticleSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.obj `cygpath -w Particle/ParticleSet.cpp`

ParticleSet.lo: Particle/ParticleSet.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.cpp' object='ParticleSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.Plo' tmpdepfile='$(DEPDIR)/ParticleSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.lo `test -f 'Particle/ParticleSet.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.cpp

ParticleSet.BC.o: Particle/ParticleSet.BC.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.BC.cpp' object='ParticleSet.BC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.BC.Po' tmpdepfile='$(DEPDIR)/ParticleSet.BC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.BC.o `test -f 'Particle/ParticleSet.BC.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.BC.cpp

ParticleSet.BC.obj: Particle/ParticleSet.BC.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.BC.cpp' object='ParticleSet.BC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.BC.Po' tmpdepfile='$(DEPDIR)/ParticleSet.BC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.BC.obj `cygpath -w Particle/ParticleSet.BC.cpp`

ParticleSet.BC.lo: Particle/ParticleSet.BC.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.BC.cpp' object='ParticleSet.BC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.BC.Plo' tmpdepfile='$(DEPDIR)/ParticleSet.BC.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.BC.lo `test -f 'Particle/ParticleSet.BC.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.BC.cpp

MCWalkerConfiguration.o: Particle/MCWalkerConfiguration.cpp
@AMDEP_TRUE@	source='Particle/MCWalkerConfiguration.cpp' object='MCWalkerConfiguration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MCWalkerConfiguration.Po' tmpdepfile='$(DEPDIR)/MCWalkerConfiguration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MCWalkerConfiguration.o `test -f 'Particle/MCWalkerConfiguration.cpp' || echo '$(srcdir)/'`Particle/MCWalkerConfiguration.cpp

MCWalkerConfiguration.obj: Particle/MCWalkerConfiguration.cpp
@AMDEP_TRUE@	source='Particle/MCWalkerConfiguration.cpp' object='MCWalkerConfiguration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MCWalkerConfiguration.Po' tmpdepfile='$(DEPDIR)/MCWalkerConfiguration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MCWalkerConfiguration.obj `cygpath -w Particle/MCWalkerConfiguration.cpp`

MCWalkerConfiguration.lo: Particle/MCWalkerConfiguration.cpp
@AMDEP_TRUE@	source='Particle/MCWalkerConfiguration.cpp' object='MCWalkerConfiguration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MCWalkerConfiguration.Plo' tmpdepfile='$(DEPDIR)/MCWalkerConfiguration.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MCWalkerConfiguration.lo `test -f 'Particle/MCWalkerConfiguration.cpp' || echo '$(srcdir)/'`Particle/MCWalkerConfiguration.cpp

DistanceTable.o: Particle/DistanceTable.cpp
@AMDEP_TRUE@	source='Particle/DistanceTable.cpp' object='DistanceTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DistanceTable.Po' tmpdepfile='$(DEPDIR)/DistanceTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistanceTable.o `test -f 'Particle/DistanceTable.cpp' || echo '$(srcdir)/'`Particle/DistanceTable.cpp

DistanceTable.obj: Particle/DistanceTable.cpp
@AMDEP_TRUE@	source='Particle/DistanceTable.cpp' object='DistanceTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DistanceTable.Po' tmpdepfile='$(DEPDIR)/DistanceTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistanceTable.obj `cygpath -w Particle/DistanceTable.cpp`

DistanceTable.lo: Particle/DistanceTable.cpp
@AMDEP_TRUE@	source='Particle/DistanceTable.cpp' object='DistanceTable.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DistanceTable.Plo' tmpdepfile='$(DEPDIR)/DistanceTable.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistanceTable.lo `test -f 'Particle/DistanceTable.cpp' || echo '$(srcdir)/'`Particle/DistanceTable.cpp

HDFWalkerOutput.o: Particle/HDFWalkerOutput.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerOutput.cpp' object='HDFWalkerOutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerOutput.Po' tmpdepfile='$(DEPDIR)/HDFWalkerOutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerOutput.o `test -f 'Particle/HDFWalkerOutput.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerOutput.cpp

HDFWalkerOutput.obj: Particle/HDFWalkerOutput.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerOutput.cpp' object='HDFWalkerOutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerOutput.Po' tmpdepfile='$(DEPDIR)/HDFWalkerOutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerOutput.obj `cygpath -w Particle/HDFWalkerOutput.cpp`

HDFWalkerOutput.lo: Particle/HDFWalkerOutput.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerOutput.cpp' object='HDFWalkerOutput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerOutput.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerOutput.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerOutput.lo `test -f 'Particle/HDFWalkerOutput.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerOutput.cpp

HDFWalkerInput0.o: Particle/HDFWalkerInput0.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInput0.cpp' object='HDFWalkerInput0.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInput0.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInput0.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInput0.o `test -f 'Particle/HDFWalkerInput0.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInput0.cpp

HDFWalkerInput0.obj: Particle/HDFWalkerInput0.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInput0.cpp' object='HDFWalkerInput0.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInput0.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInput0.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInput0.obj `cygpath -w Particle/HDFWalkerInput0.cpp`

HDFWalkerInput0.lo: Particle/HDFWalkerInput0.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInput0.cpp' object='HDFWalkerInput0.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInput0.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerInput0.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInput0.lo `test -f 'Particle/HDFWalkerInput0.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInput0.cpp

HDFWalkerInputCollect.o: Particle/HDFWalkerInputCollect.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputCollect.cpp' object='HDFWalkerInputCollect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputCollect.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputCollect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputCollect.o `test -f 'Particle/HDFWalkerInputCollect.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputCollect.cpp

HDFWalkerInputCollect.obj: Particle/HDFWalkerInputCollect.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputCollect.cpp' object='HDFWalkerInputCollect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputCollect.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputCollect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputCollect.obj `cygpath -w Particle/HDFWalkerInputCollect.cpp`

HDFWalkerInputCollect.lo: Particle/HDFWalkerInputCollect.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputCollect.cpp' object='HDFWalkerInputCollect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputCollect.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerInputCollect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputCollect.lo `test -f 'Particle/HDFWalkerInputCollect.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputCollect.cpp

HDFWalkerInputManager.o: Particle/HDFWalkerInputManager.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputManager.cpp' object='HDFWalkerInputManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputManager.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputManager.o `test -f 'Particle/HDFWalkerInputManager.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputManager.cpp

HDFWalkerInputManager.obj: Particle/HDFWalkerInputManager.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputManager.cpp' object='HDFWalkerInputManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputManager.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputManager.obj `cygpath -w Particle/HDFWalkerInputManager.cpp`

HDFWalkerInputManager.lo: Particle/HDFWalkerInputManager.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputManager.cpp' object='HDFWalkerInputManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputManager.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerInputManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputManager.lo `test -f 'Particle/HDFWalkerInputManager.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputManager.cpp

KContainer.o: LongRange/KContainer.cpp
@AMDEP_TRUE@	source='LongRange/KContainer.cpp' object='KContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/KContainer.Po' tmpdepfile='$(DEPDIR)/KContainer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KContainer.o `test -f 'LongRange/KContainer.cpp' || echo '$(srcdir)/'`LongRange/KContainer.cpp

KContainer.obj: LongRange/KContainer.cpp
@AMDEP_TRUE@	source='LongRange/KContainer.cpp' object='KContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/KContainer.Po' tmpdepfile='$(DEPDIR)/KContainer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KContainer.obj `cygpath -w LongRange/KContainer.cpp`

KContainer.lo: LongRange/KContainer.cpp
@AMDEP_TRUE@	source='LongRange/KContainer.cpp' object='KContainer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/KContainer.Plo' tmpdepfile='$(DEPDIR)/KContainer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KContainer.lo `test -f 'LongRange/KContainer.cpp' || echo '$(srcdir)/'`LongRange/KContainer.cpp

StructFact.o: LongRange/StructFact.cpp
@AMDEP_TRUE@	source='LongRange/StructFact.cpp' object='StructFact.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StructFact.Po' tmpdepfile='$(DEPDIR)/StructFact.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StructFact.o `test -f 'LongRange/StructFact.cpp' || echo '$(srcdir)/'`LongRange/StructFact.cpp

StructFact.obj: LongRange/StructFact.cpp
@AMDEP_TRUE@	source='LongRange/StructFact.cpp' object='StructFact.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StructFact.Po' tmpdepfile='$(DEPDIR)/StructFact.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StructFact.obj `cygpath -w LongRange/StructFact.cpp`

StructFact.lo: LongRange/StructFact.cpp
@AMDEP_TRUE@	source='LongRange/StructFact.cpp' object='StructFact.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StructFact.Plo' tmpdepfile='$(DEPDIR)/StructFact.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StructFact.lo `test -f 'LongRange/StructFact.cpp' || echo '$(srcdir)/'`LongRange/StructFact.cpp

ParticleLayoutIO.o: ParticleIO/ParticleLayoutIO.cpp
@AMDEP_TRUE@	source='ParticleIO/ParticleLayoutIO.cpp' object='ParticleLayoutIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleLayoutIO.Po' tmpdepfile='$(DEPDIR)/ParticleLayoutIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleLayoutIO.o `test -f 'ParticleIO/ParticleLayoutIO.cpp' || echo '$(srcdir)/'`ParticleIO/ParticleLayoutIO.cpp

ParticleLayoutIO.obj: ParticleIO/ParticleLayoutIO.cpp
@AMDEP_TRUE@	source='ParticleIO/ParticleLayoutIO.cpp' object='ParticleLayoutIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleLayoutIO.Po' tmpdepfile='$(DEPDIR)/ParticleLayoutIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleLayoutIO.obj `cygpath -w ParticleIO/ParticleLayoutIO.cpp`

ParticleLayoutIO.lo: ParticleIO/ParticleLayoutIO.cpp
@AMDEP_TRUE@	source='ParticleIO/ParticleLayoutIO.cpp' object='ParticleLayoutIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleLayoutIO.Plo' tmpdepfile='$(DEPDIR)/ParticleLayoutIO.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleLayoutIO.lo `test -f 'ParticleIO/ParticleLayoutIO.cpp' || echo '$(srcdir)/'`ParticleIO/ParticleLayoutIO.cpp

HDFParticleIO.o: ParticleIO/HDFParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/HDFParticleIO.cpp' object='HDFParticleIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFParticleIO.Po' tmpdepfile='$(DEPDIR)/HDFParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFParticleIO.o `test -f 'ParticleIO/HDFParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/HDFParticleIO.cpp

HDFParticleIO.obj: ParticleIO/HDFParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/HDFParticleIO.cpp' object='HDFParticleIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFParticleIO.Po' tmpdepfile='$(DEPDIR)/HDFParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFParticleIO.obj `cygpath -w ParticleIO/HDFParticleIO.cpp`

HDFParticleIO.lo: ParticleIO/HDFParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/HDFParticleIO.cpp' object='HDFParticleIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFParticleIO.Plo' tmpdepfile='$(DEPDIR)/HDFParticleIO.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFParticleIO.lo `test -f 'ParticleIO/HDFParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/HDFParticleIO.cpp

XMLParticleIO.o: ParticleIO/XMLParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/XMLParticleIO.cpp' object='XMLParticleIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/XMLParticleIO.Po' tmpdepfile='$(DEPDIR)/XMLParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLParticleIO.o `test -f 'ParticleIO/XMLParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/XMLParticleIO.cpp

XMLParticleIO.obj: ParticleIO/XMLParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/XMLParticleIO.cpp' object='XMLParticleIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/XMLParticleIO.Po' tmpdepfile='$(DEPDIR)/XMLParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLParticleIO.obj `cygpath -w ParticleIO/XMLParticleIO.cpp`

XMLParticleIO.lo: ParticleIO/XMLParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/XMLParticleIO.cpp' object='XMLParticleIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/XMLParticleIO.Plo' tmpdepfile='$(DEPDIR)/XMLParticleIO.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLParticleIO.lo `test -f 'ParticleIO/XMLParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/XMLParticleIO.cpp

QMCHamiltonian.o: QMCHamiltonians/QMCHamiltonian.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/QMCHamiltonian.cpp' object='QMCHamiltonian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCHamiltonian.Po' tmpdepfile='$(DEPDIR)/QMCHamiltonian.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCHamiltonian.o `test -f 'QMCHamiltonians/QMCHamiltonian.cpp' || echo '$(srcdir)/'`QMCHamiltonians/QMCHamiltonian.cpp

QMCHamiltonian.obj: QMCHamiltonians/QMCHamiltonian.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/QMCHamiltonian.cpp' object='QMCHamiltonian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCHamiltonian.Po' tmpdepfile='$(DEPDIR)/QMCHamiltonian.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCHamiltonian.obj `cygpath -w QMCHamiltonians/QMCHamiltonian.cpp`

QMCHamiltonian.lo: QMCHamiltonians/QMCHamiltonian.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/QMCHamiltonian.cpp' object='QMCHamiltonian.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCHamiltonian.Plo' tmpdepfile='$(DEPDIR)/QMCHamiltonian.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCHamiltonian.lo `test -f 'QMCHamiltonians/QMCHamiltonian.cpp' || echo '$(srcdir)/'`QMCHamiltonians/QMCHamiltonian.cpp

JastrowBuilder.o: QMCWaveFunctions/JastrowBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JastrowBuilder.cpp' object='JastrowBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JastrowBuilder.Po' tmpdepfile='$(DEPDIR)/JastrowBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JastrowBuilder.o `test -f 'QMCWaveFunctions/JastrowBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JastrowBuilder.cpp

JastrowBuilder.obj: QMCWaveFunctions/JastrowBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JastrowBuilder.cpp' object='JastrowBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JastrowBuilder.Po' tmpdepfile='$(DEPDIR)/JastrowBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JastrowBuilder.obj `cygpath -w QMCWaveFunctions/JastrowBuilder.cpp`

JastrowBuilder.lo: QMCWaveFunctions/JastrowBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JastrowBuilder.cpp' object='JastrowBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JastrowBuilder.Plo' tmpdepfile='$(DEPDIR)/JastrowBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JastrowBuilder.lo `test -f 'QMCWaveFunctions/JastrowBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JastrowBuilder.cpp

TrialWaveFunction.o: QMCWaveFunctions/TrialWaveFunction.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/TrialWaveFunction.cpp' object='TrialWaveFunction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TrialWaveFunction.Po' tmpdepfile='$(DEPDIR)/TrialWaveFunction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrialWaveFunction.o `test -f 'QMCWaveFunctions/TrialWaveFunction.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/TrialWaveFunction.cpp

TrialWaveFunction.obj: QMCWaveFunctions/TrialWaveFunction.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/TrialWaveFunction.cpp' object='TrialWaveFunction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TrialWaveFunction.Po' tmpdepfile='$(DEPDIR)/TrialWaveFunction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrialWaveFunction.obj `cygpath -w QMCWaveFunctions/TrialWaveFunction.cpp`

TrialWaveFunction.lo: QMCWaveFunctions/TrialWaveFunction.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/TrialWaveFunction.cpp' object='TrialWaveFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TrialWaveFunction.Plo' tmpdepfile='$(DEPDIR)/TrialWaveFunction.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrialWaveFunction.lo `test -f 'QMCWaveFunctions/TrialWaveFunction.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/TrialWaveFunction.cpp
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES) ohmms-config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) ohmms-config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS) ohmms-config.h
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-generic clean-libLIBRARIES clean-libtool clean-recursive \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-hdr distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-libLIBRARIES install-man \
	install-pkgincludeHEADERS install-recursive install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	installdirs-recursive maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
