# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AS = @AS@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
BLITZ_LIBS = @BLITZ_LIBS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
F90 = @F90@
F90_OPTIMIZE_FLAGS = @F90_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
HDF5_LIBS = @HDF5_LIBS@

INCLUDES = -I$(top_srcdir)/src
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MKL_LIBS = @MKL_LIBS@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPILIBS = @MPILIBS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
QMCBASE_LIBS = @QMCBASE_LIBS@
RANLIB = @RANLIB@
RC = @RC@
SPRNG_LIBS = @SPRNG_LIBS@
STRIP = @STRIP@
UP = @UP@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
QMC_COMMON_SRCS = QMCDriver.cpp\
VMC.cpp\
VMC_OPT.cpp\
MolecuDMC.cpp\
WaveFunctionTester.cpp\
../Estimators/ScalarEstimatorManager.cpp \
QMCApps.cpp


@USE_MOLECUAPPS_TRUE@QMC_MOLECU = \
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/OrbitalBuilderBase.cpp \
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp \
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp\
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp\
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp\
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp\
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp\
@USE_MOLECUAPPS_TRUE@    ../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp\
@USE_MOLECUAPPS_TRUE@    MolecuApps.cpp



#if USE_QDAPPS
#QMC_QD = \
#   ../QMCWaveFunctions/OrbitalBuilderBase.cpp \
#    ../Numerics/Spline3D/Grid1D.cpp \
#    ../Numerics/Spline3D/Grid3D.cpp \
#    ../Numerics/Spline3D/CubicSpline.cpp \
#    ../Numerics/Spline3D/TriCubicSpline.cpp \
#    ../Numerics/Spline3D/TriCubicSplineSet.cpp \
#    ../QMCWaveFunctions/TriCubicSplineBuilder.cpp \
#    ../QMCWaveFunctions/QDwfBuilder.cpp \
#    ../QMCWaveFunctions/QDwf.cpp \
#    QDApps.cpp \
#endif
bin_PROGRAMS = qmcapp
qmcapp_SOURCES = \
$(QMC_MOLECU) \
$(QMC_QD) \
$(QMC_COMMON_SRCS)\
main.cpp

qmcapp_LDADD = @QMCBASE_LIBS@ 
qmcapp_LDFLAGS = @LDFLAGS@ 
qmcapp_DEPENDENCIES = ${top_builddir}/src/libqmcbase.a
subdir = src/QMC
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/ohmms-config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = qmcapp$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

@USE_MOLECUAPPS_TRUE@am__objects_1 = OrbitalBuilderBase.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	HFAtomicSTOSet.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	HFAtomicSTOSetBuilder.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	HeSTOClementiRottie.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	RadialGridFunctorBuilder.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	STOMolecularOrbitals.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	GridMolecularOrbitals.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	MolecularOrbitalBuilder.$(OBJEXT) \
@USE_MOLECUAPPS_TRUE@	MolecuApps.$(OBJEXT)
am__objects_3 = QMCDriver.$(OBJEXT) VMC.$(OBJEXT) VMC_OPT.$(OBJEXT) \
	MolecuDMC.$(OBJEXT) WaveFunctionTester.$(OBJEXT) \
	ScalarEstimatorManager.$(OBJEXT) QMCApps.$(OBJEXT)
am_qmcapp_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	main.$(OBJEXT)
qmcapp_OBJECTS = $(am_qmcapp_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/GridMolecularOrbitals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HFAtomicSTOSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HFAtomicSTOSetBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HeSTOClementiRottie.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MolecuApps.Po ./$(DEPDIR)/MolecuDMC.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MolecularOrbitalBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OrbitalBuilderBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QMCApps.Po ./$(DEPDIR)/QMCDriver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RadialGridFunctorBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/STOMolecularOrbitals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ScalarEstimatorManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VMC.Po ./$(DEPDIR)/VMC_OPT.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveFunctionTester.Po \
@AMDEP_TRUE@	./$(DEPDIR)/main.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(qmcapp_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(qmcapp_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/QMC/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
OrbitalBuilderBase.$(OBJEXT): ../QMCWaveFunctions/OrbitalBuilderBase.cpp
HFAtomicSTOSet.$(OBJEXT): \
	../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
HFAtomicSTOSetBuilder.$(OBJEXT): \
	../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
HeSTOClementiRottie.$(OBJEXT): \
	../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
RadialGridFunctorBuilder.$(OBJEXT): \
	../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp
STOMolecularOrbitals.$(OBJEXT): \
	../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
GridMolecularOrbitals.$(OBJEXT): \
	../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
MolecularOrbitalBuilder.$(OBJEXT): \
	../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
ScalarEstimatorManager.$(OBJEXT): \
	../Estimators/ScalarEstimatorManager.cpp
qmcapp$(EXEEXT): $(qmcapp_OBJECTS) $(qmcapp_DEPENDENCIES) 
	@rm -f qmcapp$(EXEEXT)
	$(CXXLINK) $(qmcapp_LDFLAGS) $(qmcapp_OBJECTS) $(qmcapp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GridMolecularOrbitals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HFAtomicSTOSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HFAtomicSTOSetBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HeSTOClementiRottie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MolecuApps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MolecuDMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MolecularOrbitalBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OrbitalBuilderBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCApps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RadialGridFunctorBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/STOMolecularOrbitals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarEstimatorManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMC_OPT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveFunctionTester.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

OrbitalBuilderBase.o: ../QMCWaveFunctions/OrbitalBuilderBase.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/OrbitalBuilderBase.cpp' object='OrbitalBuilderBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OrbitalBuilderBase.Po' tmpdepfile='$(DEPDIR)/OrbitalBuilderBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OrbitalBuilderBase.o `test -f '../QMCWaveFunctions/OrbitalBuilderBase.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/OrbitalBuilderBase.cpp

OrbitalBuilderBase.obj: ../QMCWaveFunctions/OrbitalBuilderBase.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/OrbitalBuilderBase.cpp' object='OrbitalBuilderBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OrbitalBuilderBase.Po' tmpdepfile='$(DEPDIR)/OrbitalBuilderBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OrbitalBuilderBase.obj `cygpath -w ../QMCWaveFunctions/OrbitalBuilderBase.cpp`

OrbitalBuilderBase.lo: ../QMCWaveFunctions/OrbitalBuilderBase.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/OrbitalBuilderBase.cpp' object='OrbitalBuilderBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OrbitalBuilderBase.Plo' tmpdepfile='$(DEPDIR)/OrbitalBuilderBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OrbitalBuilderBase.lo `test -f '../QMCWaveFunctions/OrbitalBuilderBase.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/OrbitalBuilderBase.cpp

HFAtomicSTOSet.o: ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' object='HFAtomicSTOSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSet.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSet.o `test -f '../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp

HFAtomicSTOSet.obj: ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' object='HFAtomicSTOSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSet.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSet.obj `cygpath -w ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp`

HFAtomicSTOSet.lo: ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' object='HFAtomicSTOSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSet.Plo' tmpdepfile='$(DEPDIR)/HFAtomicSTOSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSet.lo `test -f '../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp

HFAtomicSTOSetBuilder.o: ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' object='HFAtomicSTOSetBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSetBuilder.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSetBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSetBuilder.o `test -f '../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp

HFAtomicSTOSetBuilder.obj: ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' object='HFAtomicSTOSetBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSetBuilder.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSetBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSetBuilder.obj `cygpath -w ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp`

HFAtomicSTOSetBuilder.lo: ../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' object='HFAtomicSTOSetBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSetBuilder.Plo' tmpdepfile='$(DEPDIR)/HFAtomicSTOSetBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSetBuilder.lo `test -f '../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp

HeSTOClementiRottie.o: ../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' object='HeSTOClementiRottie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HeSTOClementiRottie.Po' tmpdepfile='$(DEPDIR)/HeSTOClementiRottie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeSTOClementiRottie.o `test -f '../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp

HeSTOClementiRottie.obj: ../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' object='HeSTOClementiRottie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HeSTOClementiRottie.Po' tmpdepfile='$(DEPDIR)/HeSTOClementiRottie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeSTOClementiRottie.obj `cygpath -w ../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp`

HeSTOClementiRottie.lo: ../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' object='HeSTOClementiRottie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HeSTOClementiRottie.Plo' tmpdepfile='$(DEPDIR)/HeSTOClementiRottie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeSTOClementiRottie.lo `test -f '../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp

RadialGridFunctorBuilder.o: ../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp' object='RadialGridFunctorBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RadialGridFunctorBuilder.Po' tmpdepfile='$(DEPDIR)/RadialGridFunctorBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadialGridFunctorBuilder.o `test -f '../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp

RadialGridFunctorBuilder.obj: ../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp' object='RadialGridFunctorBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RadialGridFunctorBuilder.Po' tmpdepfile='$(DEPDIR)/RadialGridFunctorBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadialGridFunctorBuilder.obj `cygpath -w ../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp`

RadialGridFunctorBuilder.lo: ../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp' object='RadialGridFunctorBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RadialGridFunctorBuilder.Plo' tmpdepfile='$(DEPDIR)/RadialGridFunctorBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadialGridFunctorBuilder.lo `test -f '../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/RadialGridFunctorBuilder.cpp

STOMolecularOrbitals.o: ../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' object='STOMolecularOrbitals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STOMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/STOMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STOMolecularOrbitals.o `test -f '../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp

STOMolecularOrbitals.obj: ../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' object='STOMolecularOrbitals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STOMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/STOMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STOMolecularOrbitals.obj `cygpath -w ../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp`

STOMolecularOrbitals.lo: ../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' object='STOMolecularOrbitals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STOMolecularOrbitals.Plo' tmpdepfile='$(DEPDIR)/STOMolecularOrbitals.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STOMolecularOrbitals.lo `test -f '../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp

GridMolecularOrbitals.o: ../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' object='GridMolecularOrbitals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GridMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/GridMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GridMolecularOrbitals.o `test -f '../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp

GridMolecularOrbitals.obj: ../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' object='GridMolecularOrbitals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GridMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/GridMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GridMolecularOrbitals.obj `cygpath -w ../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp`

GridMolecularOrbitals.lo: ../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' object='GridMolecularOrbitals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GridMolecularOrbitals.Plo' tmpdepfile='$(DEPDIR)/GridMolecularOrbitals.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GridMolecularOrbitals.lo `test -f '../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp

MolecularOrbitalBuilder.o: ../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' object='MolecularOrbitalBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MolecularOrbitalBuilder.Po' tmpdepfile='$(DEPDIR)/MolecularOrbitalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolecularOrbitalBuilder.o `test -f '../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp

MolecularOrbitalBuilder.obj: ../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' object='MolecularOrbitalBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MolecularOrbitalBuilder.Po' tmpdepfile='$(DEPDIR)/MolecularOrbitalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolecularOrbitalBuilder.obj `cygpath -w ../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp`

MolecularOrbitalBuilder.lo: ../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
@AMDEP_TRUE@	source='../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' object='MolecularOrbitalBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MolecularOrbitalBuilder.Plo' tmpdepfile='$(DEPDIR)/MolecularOrbitalBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolecularOrbitalBuilder.lo `test -f '../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' || echo '$(srcdir)/'`../QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp

ScalarEstimatorManager.o: ../Estimators/ScalarEstimatorManager.cpp
@AMDEP_TRUE@	source='../Estimators/ScalarEstimatorManager.cpp' object='ScalarEstimatorManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ScalarEstimatorManager.Po' tmpdepfile='$(DEPDIR)/ScalarEstimatorManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarEstimatorManager.o `test -f '../Estimators/ScalarEstimatorManager.cpp' || echo '$(srcdir)/'`../Estimators/ScalarEstimatorManager.cpp

ScalarEstimatorManager.obj: ../Estimators/ScalarEstimatorManager.cpp
@AMDEP_TRUE@	source='../Estimators/ScalarEstimatorManager.cpp' object='ScalarEstimatorManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ScalarEstimatorManager.Po' tmpdepfile='$(DEPDIR)/ScalarEstimatorManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarEstimatorManager.obj `cygpath -w ../Estimators/ScalarEstimatorManager.cpp`

ScalarEstimatorManager.lo: ../Estimators/ScalarEstimatorManager.cpp
@AMDEP_TRUE@	source='../Estimators/ScalarEstimatorManager.cpp' object='ScalarEstimatorManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ScalarEstimatorManager.Plo' tmpdepfile='$(DEPDIR)/ScalarEstimatorManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarEstimatorManager.lo `test -f '../Estimators/ScalarEstimatorManager.cpp' || echo '$(srcdir)/'`../Estimators/ScalarEstimatorManager.cpp
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
